# Make SSH_AUTH_SOCK into a symlink to the real socket so it stays stable.
# Update the symlink when a client attaches by reading the envvar from the
# client process.
run 'tmux set -g update-environment \
    "$(tmux show -g update-environment | \
       sed "s/^[^ ]* //;/^SSH_AUTH_SOCK$/d" | \
       tr "\n" " ")"'

%if "#{!=:$TMUX_TMPDIR,}"
    setenv -Fg SSH_AUTH_SOCK "$TMUX_TMPDIR/tmux-#{uid}/ssh-auth.sock"
%else
    setenv -Fg SSH_AUTH_SOCK "/tmp/tmux-#{uid}/ssh-auth.sock"
%endif
set-hook -g client-session-changed {run -b ' \
    if [ "$(uname)" == "Darwin" ]; then \
        SOCK=$(ps -E #{client_pid} | tr " " "\n" | sed -E "/^SSH_AUTH_SOCK=/{s/^[^=]+=//;q;};d"); \
    else \
        SOCK=$(sed -Ez "/^SSH_AUTH_SOCK=/{s/^[^=]+=//;q;};d" /proc/#{client_pid}/environ | tr "\0" "\n"); \
    fi; \
    if [ -S "$SOCK" ] && \
       [ "$SOCK" != "$(readlink $SSH_AUTH_SOCK)" ] && \
       ! timeout 5s ssh-add -l >/dev/null 2>/dev/null; \
    then  \
        ln -sf "$SOCK" "$SSH_AUTH_SOCK"; \
    fi'}

